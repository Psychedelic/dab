type add_trusted_source_input = record {
    principal_id: principal;
    accessible_registries: vec principal;
};

type trusted_source = record {
    added_by              : principal;
    principal_id          : principal;
    last_call             : nat64;
    accessible_registries : vec principal;
};

type error = variant {
    NotAuthorized;
    NonExistentItem;
    BadParameters : text;
    Unknown : text;
};

type response = variant {
    Ok  : opt text;
    Err : error;
};

service : {
    "name"   : () -> (text) query;
    
    "add_registry": () -> (response);
    "add"    : (add_trusted_source_input) -> (response);
    "get"    : (principal) -> (opt trusted_source);
    "get_all": () -> (vec trusted_source);
    "remove" : (principal) -> (response);
}